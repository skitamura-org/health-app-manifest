apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: sample-app-template
  title: Create a health sample application with a CI pipeline
  description: Create a starter application with a CI pipeline
  tags:
    - recommended
spec:
  owner: skitamura7446
  system: sample-system
  type: service

  parameters:
    - title: Provide information about the new component
      required:
        - org_name
        - app_name
        - owner
        - system
#        - port
      properties:
        org_name:
          title: Organization Name
          type: string
        app_name:
          title: Repository Name
          type: string
          default: "health-sample"
        description:
          title: Description
          type: string
          description: Help others understand what this component is for
        owner:
          title: Owner
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
        system:
          title: System
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - System
#        port:
#          title: Port
#          type: number
#          default: 3000
#          description: Override the port exposed for the application
#    - title: Provide information about the CI method
#      required:
#        - ci
#      properties:
#        ci:
#          title: Select a CI method
#          type: string
#          description: This action will create a CI pipeline for your application based on chosen method
#          default: ../../../skeletons/github-actions/
#          enum:
#            - ../../../skeletons/github-actions/
#            - ../../../skeletons/tekton/
#          enumNames:
#            - GitHub Action
#            - Tekton
#      dependencies:
#        ci:
#          oneOf:
#            - properties:
#                # Show no extra properties when GitHub Actions is selected
#                ci:
#                  const: ../../../skeletons/github-actions/
#            - required:
#                - imageRepository
#                - namespace
#                - imageUrl
#              properties:
#                ci:
#                  const: ../../../skeletons/tekton/
#                imageRepository:
#                  title: Select a registry
#                  type: string
#                  default: quay.io
#                  enum:
#                    - quay.io
#                    - image-registry.openshift-image-registry.svc:5000
#                  enumNames:
#                    - Quay
#                    - Internal OpenShift Registry
#                imageUrl:
#                  title: Image URL
#                  type: string
#                  description: The Quay.io or OpenShift Image URL <REGISTRY>/<IMAGE_URL>/<REPO_NAME>
#                namespace:
#                  title: Namespace
#                  type: string
#                  description: The namespace for deploying resources
  steps:
    - id: sourcecode_template
      name: Generating the Source Code Component
      action: fetch:template
      input:
        url: ./app-skeleton
        values:
          org_name: ${{ parameters.org_name }}
          app_name: ${{ parameters.app_name }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
#          applicationType: api
          description: ${{ parameters.description }}
#          namespace: ${{ parameters.namespace }}
#          imageUrl: ${{ parameters.imageUrl }}
#          imageBuilder: s2i-nodejs
#          imageRepository: ${{ parameters.imageRepository }}
#          port: ${{ parameters.port }}
#          ci: ${{ parameters.ci }}
#          sourceControl: github.com
        targetPath: ./tenant-app

    - id: publish-app
      name: Publish App Repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        repoUrl: github.com?owner=${{ parameters.org_name }}&repo=${{ parameters.app_name }}-app
        repoVisibility: public
        sourcePath: ./tenant-app
        defaultBranch: main


    - id: manifest_template
      name: Generating the CI Component
      action: fetch:template
      input:
        url: ./manifest-skeleton 
        copyWithoutTemplating:
          - .github/workflows/
        values:
          org_name: ${{ parameters.org_name }}
          app_name: ${{ parameters.app_name }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
#          applicationType: api
          description: ${{ parameters.description }}
#          namespace: ${{ parameters.namespace }}
#          imageUrl: ${{ parameters.imageUrl }}
#          imageBuilder: s2i-nodejs
#          imageRepository: ${{ parameters.imageRepository }}
#          port: ${{ parameters.port }}
#          ci: ${{ parameters.ci }}
#          sourceControl: github.com
        targetPath: ./tenant-manifest

    - id: publish-app
      name: Publish Manifest Repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        repoUrl: github.com?owner=${{ parameters.org_name }}&repo=${{ parameters.app_name }}-manifest
        repoVisibility: public
        sourcePath: ./tenant-manifest
        defaultBranch: main

#    - id: catalogTemplate
#      name: Generating the Catalog Info Component
#      action: fetch:template
#      input:
#        url: ../../../skeletons/catalog-info/
#        values:
#          orgName: ${{ parameters.orgName }}
#          repoName: ${{ parameters.repoName }}
#          owner: ${{ parameters.owner }}
#          system: ${{ parameters.system }}
#          applicationType: api
#          description: ${{ parameters.description }}
#          namespace: ${{ parameters.namespace }}
#          imageUrl: ${{ parameters.imageUrl }}
#          imageBuilder: s2i-nodejs
#          imageRepository: ${{ parameters.imageRepository }}
#          port: ${{ parameters.port }}
#          ci: ${{ parameters.ci }}
#          sourceControl: github.com

#    - id: publish
#      name: Publishing to the Source Code Repository
#      action: publish:github
#      input:
#        allowedHosts: ['github.com']
#        description: ${{ parameters.description }}
#        repoUrl: github.com?owner=${{ parameters.org_name }}&repo=${{ parameters.app_name }}
#        defaultBranch: master

    - id: register
      name: Registering the Catalog Info Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish-app.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Open the Source Code Repository
        url: ${{ steps.publish-app.output.remoteUrl }}
      - title: Open the Catalog Info Component
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
